:root {
    --body-color: #ffebee;
    --dark-primary-color: #D32F2F;
    --light-primary-color: ##FFE0B2;
    --primary-color: #F44336;
    --text:#FFFFFF;
    --accent-color:#00BCD4;
    --primary-text:#212121;
    --secondary-text:#757575;
    --divider-color:#BDBDBD;
    --body-font: 'Oswald', sans-serif;
    --title-font: 'Open Sans', sans-serif;
    
    
}

h1{
    font-size: 40px;
    line-height: 1.5;
    letter-spacing: -.2;
    color: var(--text)
}

h2 {
    color: var(--primary-color);
    text-transform: uppercase;
    font-weight: bold;
    font-size: 24px;
    margin-bottom: 35px;
}

/* *clases utilitarias */
.wrapper {
    /* border: 1px solid red;  se uso para guiarse en el wrapper, descontinuado por motivos esteticos*/
    max-width: 1000px;
    margin: 0 auto;
    display: inherit; /* inherit es una cosa maravillosa que sirve para heredar 
    las caracteristicas del padre. es muy util en display, justify content, y aling*/
    justify-content: inherit;
    align-items: inherit;
    flex-wrap: inherit; /* flex-wrap sirve para que los elementos de un wrap no se salga 
    de este, sino que se reacomoden automaicamente segun el tama単o del wrap
    
    flex-wrap ayuda un chingos cuando trabajremos versiones moviles porque reacomoda automaticamente 
    el tmma単o de los elementos a la pantlla del celular*/
    flex: 1;
}

.header {
    display: flex;
    justify-content: space-between;
    background: var(--dark-primary-color);
    color: var(--text);
    justify-content: space-between;
    align-items: center;
    flex-wrap: wrap;
}
.header ul {
    list-style: none;
    display: flex;
    padding: 0px;
}

.header ul li {
    margin: 0px 10px;
}

.header a{
    color: var(--text);
    text-decoration: none;
}

.hero {
    /* border: 2px solid lime; */
    background-color: var(--primary-color);
    background-repeat: no-repeat;
    /* background-position-x: right; se quito para que ocupe el fondo de hero*/
    display: flex;
    align-items: center;
    flex-wrap: wrap;
    background-image: url(../img/hero.jpg); /* se le agrego para que ya no sea elemento html*/
    background-size: 100% auto; 
    padding: 100px 0;
    background-position: center;
}

.hero strong{
    color: var(--light-primary-color);
}

.portafolio {
    background: var(--light-primary-color);
    padding: 20px;
}


.project {
    border: 1px solid grey;
    border-radius: 15px;
    /* margin-top:10px;
    margin-right:10px;
    margin-left:10px;
    margin-bottom:10px; 
    todo eso se puede abreviar con -->
    */
    margin: 10px;
    padding: 20px;
    background: white;
    display: flex;
    justify-content: space-between;
    align-items: center;
    flex-wrap: wrap;
}
.project-details {
    /* border: 2px solid red; */
    width: 500px;
}

.project-title {
    font-size: 32px;
    margin-top: 0px;
    margin-bottom: 10px;

}

.project-subtitle, .project-date, .project-url {
    margin: 10px 0px;
}

.project-description {
    font-size: 20px;
}

body{
    margin: 0;
    padding: 0;
    background: var(--body-color);
    font-family: var(--body-font);
    

}

h1, h2, h3, h5, h6 {
    font-family: var(--title-font);
    /* font-weight: normal;  <---esto hacia el h1 en normal, pero a mi me usta bold*/
}

h1{
    font-size: 40px;
    line-height: 1.5;
    letter-spacing: -.3px;
}

.project-details {
    border: 2px solid red;
    width: 500px;
}

.project-img-container {
    border: 2px solid blue;
    width: 500px;
}

.experience-container {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-evenly;

}

.experience {
    margin: 10px;
    /* border: 3px solid orangered;  <--para ver margen*/
    width: 480px;
    background: var(--light-primary-color);
    border-radius: 15px;
    overflow: hidden;
     flex-shrink: 0;  /*esto se pone SIEMPRE en el hijo de display flex, 
     y sirve para quitar propiedades incomodas de displey flex  */

}

.experience-img-container{
    margin: 0;
}

.experience-img{
    width: 480px;
    height: 300px;
    object-fit: cover;

}

.experience-details{
    margin: 20px 30px;
    background: white;
    margin-top: -60px; /*para subir hacia la imagen*/
    position: relative; /*para poner encima de la imagen*/
    padding: 20px;
    text-align: center;
    
}

.experience-description{
    text-align: justify; /*justify no se usa porque hay ciertas limitantes para leer,
    y puede desacomodar elementos de texto en los ocntenedores, pero yo lo uso porque le 
    pregunte a simon y dijo mis huevos*/
}

.experience-url {
    color: var(--primary-color);
    text-decoration: none;
    border: 1px solid var(--primary-color);
    border-radius: 5px;
    padding: 5px 20px;
    transition: 450 ms all; /* 450 ms= 450 milesegundos, sirve para cuando hya un cambio relacionado con
    hover, u otro, tardara 450 milesegundos en ejecutarse. all=a todo, en este caso, toda la transicion
    va a tener la misma velocidad  (cubic-bezier.com)*/


}

.experience-url:hover{ /*experience-url es una clase (class) y hover es una subclase, significa que
    habra cambios de comportamiento al ponerle el mouse encima*/
    background: var(--primary-color);
    color: white; /*color del texto va a cambiar a esto cuendo hover*/


}

.contact{
    background: var(--primary-color);
    color: var(--text);
    height: 150px;
    display: flex;
    align-items: center;
    justify-content: space-between;
    flex-wrap: wrap;
}

.contact-form-label{
    display: block;
    font-weight: bold;
    font-size: 22px;
    
}

.contact-form-email {
    border: 1px solid gray;
    border-radius: 10px;
    padding: 5px 20px;
    padding-left: 25px;
    background-image: url(../img/envelope.svg);
    background-size: 15px;
    background-repeat: no-repeat;
    background-position-y: center;
    background-position-x: 5px;
    margin: 15px 0px
}

.contact-form-button {
    text-transform: uppercase;
    font-size: 12px;
    display: block;
    background: transparent;
    color: var(--text);
    border-radius: 5px;
    padding: 10px 15px;
    width: 100px;
}

.social-container{
    /* border: 1px solid red;  era borde para ver esta vaina, se quita*/
}

.social-link{
    display: inline-block;
    width: 50px;
    height: 50px;
    border: 1px solid white;
    background-size: 50px 50px; /*para que el tama単o del fondo sea especifico, sin 
    este,e単 fndo de imagen seria muy grande*/
}

.social-link.facebook /*al borrar el espacio entre social link y fb,
indicamos que solo los elementos que tengan esas dos clases en especifico tomen 
las caracteristicas, si falta caulquiera, no funcionara*/{
    background-image: url("../img/icon-fb.svg");
}
.social-link.twitter {
    background-image: url("../img/icon-twitter.svg")
}
.social-link.instangram {
    background-image: url("../img/icon-insta.svg")
}
.social-link.github {
    background-image: url("../img/icon-github.svg")
}

.footer{
    background: var(--dark-primary-color);
    color: var(--text);
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin: 0px;
    padding: 20px;
    flex-wrap: wrap;
}

.footer a {
    text-decoration: none;
    color: var(--text);
}

/* MEDIA QUERIES */
@media screen and (max-width: 1024px) {

}

@media screen and (max-width: 767px) {
    .header{
        display: block;
    }
    .header ul {
        display: block;
    }
    .header li {
        text-align: center;
    }
    .logo {
        text-align: center;
    }
}

@media screen and (max-width: 480px) {

}

@media screen and (max-width: 320px) {

}